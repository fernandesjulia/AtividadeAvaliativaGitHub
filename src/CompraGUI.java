import java.util.Vector;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author juhfe
 */
public class CompraGUI extends javax.swing.JPanel {
//armazena temporariamente o produto com o codigo informado no ato da busca

    private Produto produtoSelecionado;
    private ModeloTabelaCompra carrinhoComprasTab;
    private double precoCompra;

    public CompraGUI() {
        initComponents();
        precoCompra = 0.0;
        meuInitComponents();
    }

    private void meuInitComponents() {
        this.carrinhoComprasTab = new ModeloTabelaCompra(this);
        //criar a conexão dos dados (comportamento) do objeto da classe com a tabela GUI
        tabelaCarrinho.setModel(carrinhoComprasTab);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        codText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomeText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantidadeText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        precoUnitText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarrinho = new javax.swing.JTable();
        removerBut = new javax.swing.JButton();
        finalizarBut = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addProdutoBut = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totalText = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 153, 102));
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(724, 438));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Código");

        codText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codTextActionPerformed(evt);
            }
        });
        codText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codTextKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Nome");

        nomeText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeText.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Quantidade");

        quantidadeText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantidadeText.setText("1");
        quantidadeText.setEnabled(false);
        quantidadeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantidadeTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeTextKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Preço Parcial");

        precoUnitText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoUnitText.setEnabled(false);
        precoUnitText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precoUnitTextActionPerformed(evt);
            }
        });

        tabelaCarrinho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaCarrinho);

        removerBut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removerBut.setText("Remover");
        removerBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButActionPerformed(evt);
            }
        });

        finalizarBut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        finalizarBut.setText("Finalizar");
        finalizarBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarButActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Estoque");

        addProdutoBut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addProdutoBut.setText("Add Produto");
        addProdutoBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdutoButActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Valor Total: R$");

        totalText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalText.setText("0,00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(codText)
                        .addComponent(nomeText)
                        .addComponent(quantidadeText, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addComponent(precoUnitText)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removerBut)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(addProdutoBut)
                .addGap(155, 155, 155)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(finalizarBut, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(removerBut)
                        .addGap(78, 78, 78)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(codText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantidadeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precoUnitText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalText)
                    .addComponent(addProdutoBut)
                    .addComponent(finalizarBut))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void codTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codTextActionPerformed

    private void precoUnitTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precoUnitTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precoUnitTextActionPerformed

    private void removerButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButActionPerformed
        int linha = tabelaCarrinho.getSelectedRow();
        if (linha > -1) {
            //posso remover o produto
            int op = JOptionPane.showConfirmDialog(null, "Desejo remover o produto selecionado?", "Confirmação de exclusão", JOptionPane.YES_NO_OPTION);
            if (op == JOptionPane.YES_NO_OPTION) {
                //remover o produto e atualizar

                String senha = JOptionPane.showInputDialog(null, "Informe a senha do gerente: ", "operação restrita", JOptionPane.INFORMATION_MESSAGE);
                if (senha != null && senha.equals("ifmg")) {
                    carrinhoComprasTab.removeProdutoCarrinho(linha);
                    atualizaQuantidades();
                }

            }
        } else {
            //produto nao foi selecionado para remoção
            JOptionPane.showMessageDialog(null, "Primeiro é preciso selecionar algum produto0", "selecionar!!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_removerButActionPerformed

    private void addProdutoButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdutoButActionPerformed
        if (produtoSelecionado != null && !precoUnitText.getText().equals("N/A")) {
            int quantidade = Integer.parseInt(quantidadeText.getText());
            if (quantidade <= produtoSelecionado.getQuantidade()) {

                Produto vendido = new Produto(produtoSelecionado.getCodigo(), produtoSelecionado.getNome(), produtoSelecionado.getPreco(), quantidade);

//a modificação da quantidade nao mais vai acontecer no código abaixo, ela vai acontecer quand finalizarmos a compra
//produtoSelecionado.setQuantidade(produtoSelecionado.getQuantidade() - quantidade);
                //aqui estamos atualizando o valor da compra do cliente
                precoCompra += produtoSelecionado.getPreco() * quantidade;
                totalText.setText(String.format("%.2f", precoCompra));
                //limpando as informações para que u novo produto seja informado
                codText.setText("");
                quantidadeText.setText("1");
                precoUnitText.setText("");
                produtoSelecionado = null;
                quantidadeText.setEnabled(false);
                nomeText.setText("");

                //add o produto vendido à tabela (carrinho)
                this.carrinhoComprasTab.addNovoProduto(vendido);
                tabelaCarrinho.updateUI();

            } else {
                //nao temos a quantidade o suficiente para efetuar a venda
                JOptionPane.showMessageDialog(nomeText, "Não há quantidade o suficiente para realizar a venda desse produto", "quantidade insuficiente", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            //produto nao existe ou a quantidade não condiz com o padrao esperado
            JOptionPane.showMessageDialog(nomeText, "A quantidade de produtos informada deve ser um valor numérico", "entrada de quantidade inválida", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_addProdutoButActionPerformed

    public void atualizaQuantidades() {
        //atualiza as informações da tabela
        tabelaCarrinho.updateUI();
        //atualizamos o valor da compra com os produtos do carrinho
        double preco = carrinhoComprasTab.calculaPrecoParcialCompra();
        totalText.setText(String.format("%.2f", preco));

    }

    private void codTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codTextKeyTyped
        // se a tecla pressionada for o enter
        if (evt.getKeyChar() == '\n') {
//avaliando se eiste informação no campo do código
            if (!codText.getText().isEmpty()) {
                try {
                    //avaliamos se o dado informado é numérico
                    int cod = Integer.parseInt(codText.getText());
                    //efetuamos a busca do produto com o codigo informado na GUI
                    produtoSelecionado = fakeBancoDados.consultaProdutoCod(cod);
                    //avaliamos se existe produto com o codigo informado
                    if (produtoSelecionado != null) {
                        //atualizamos os campos com os dados do produto
                        nomeText.setText(produtoSelecionado.getNome());
                        precoUnitText.setText(produtoSelecionado.getPreco() + "");
                        quantidadeText.setEnabled(true);
                    } else {
                        //não cadastrado
                        JOptionPane.showMessageDialog(null, "Produto não cadastrado", "Código", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "O código deve ser um valor numérico", "erro no código", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_codTextKeyTyped

    private void quantidadeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTextKeyPressed
        //quando preciona a tela por mais tempo
    }//GEN-LAST:event_quantidadeTextKeyPressed

    private void quantidadeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTextKeyReleased
         // o operador do caixa vai informar uma nova quantidade
        //calcular preço parcial desses produtos(lote)

        if (!quantidadeText.getText().isEmpty()) {
            try {
                int quantidade = Integer.parseInt(quantidadeText.getText());
                double parc = produtoSelecionado.getPreco() * quantidade;
                precoUnitText.setText(String.format("%.2f", parc));
            } catch (NumberFormatException ex) {
                precoUnitText.setText("N/A");
            }
        } else {
            //campo da quantidade sem informação
            precoUnitText.setText("N/A");
        }
    }//GEN-LAST:event_quantidadeTextKeyReleased
    private boolean verificaQuantidades() {
        Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
        for (int i = 0; i < produtos.size(); i++) {
            Produto estoque = fakeBancoDados.consultaProdutoCod(produtos.get(i).getCodigo());
            if (produtos.get(i).getQuantidade() > estoque.getQuantidade()) {
                JOptionPane.showMessageDialog(null, "A quantidade do produto " + estoque.getNome() + " não~é suficiente para concretizar a venda", "Quantidade insuficiente", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        return true;
    }
    private void finalizarButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarButActionPerformed
        //verificar se temos as quantidades dos produtos que estã sendo vendidos
        if (verificaQuantidades() == true) {
            //atualizar nosso banco de dados FAKE(memória RAM)
            Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
            for (int i = 0; i < produtos.size(); i++) {
                Produto estoque = fakeBancoDados.consultaProdutoCod(produtos.get(i).getCodigo());
                estoque.setQuantidade(estoque.getQuantidade() - produtos.get(i).getQuantidade());
            }
            //zerando o valor total para a proxima compra
            precoCompra = 0.0;
            totalText.setText("0.0");

            //remover os produtos do carrinho de compra (da compra finalizada)
            carrinhoComprasTab.limpaCarrinho();
            tabelaCarrinho.updateUI();
        }


    }//GEN-LAST:event_finalizarButActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdutoBut;
    private javax.swing.JTextField codText;
    private javax.swing.JButton finalizarBut;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeText;
    private javax.swing.JTextField precoUnitText;
    private javax.swing.JTextField quantidadeText;
    private javax.swing.JButton removerBut;
    private javax.swing.JTable tabelaCarrinho;
    private javax.swing.JLabel totalText;
    // End of variables declaration//GEN-END:variables
}
